---
- name: Playbook to install main node k8s on raspberry pis
  hosts: k8s_main
  become: yes
  tasks:
  - name: Make .kube directory
    ansible.builtin.file:
      path: "{{ ansible_env.HOME }}/.kube"
      state: directory
      mode: '0755'

  - name: Copy the k8s admin.conf file to .kube directory
    ansible.builtin.copy:
      src: /etc/kubernetes/admin.conf
      dest: "{{ ansible_env.HOME }}/.kube/config"
      owner: "{{ ansible_user_id }}"
      group: "{{ ansible_user_gid }}"
      mode: '0644'
      backup: yes
      remote_src: yes

  - name: Set ownership of .kube/config file
    ansible.builtin.file:
      path: "{{ ansible_env.HOME }}/.kube/config"
      owner: "{{ ansible_user_id }}"
      group: "{{ ansible_user_gid }}"
      mode: '0644'
  
  - name: Apply flannel to the cluster
    ansible.builtin.shell: |
      kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml
    become: no

  - name: Install cert-manager
    ansible.builtin.shell: |
      kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.15.2/cert-manager.yaml

  - name: Apply metalLB manifest
    ansible.builtin.shell: |
      kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.14.8/config/manifests/metallb-native.yaml

  - name: Configure metalLB
    ansible.builtin.shell: |
      cat <<EOF | kubectl apply -f -
      apiVersion: v1
      kind: ConfigMap
      metadata:
        namespace: metallb-system
        name: config
      data:
        config: |
          address-pools:
          - name: default
            protocol: layer2
            addresses:
            - 10.0.0.200-10.0.0.250
      ---
      EOF
    become: no

  - name: Install argocd
    ansible.builtin.shell: |
      kubectl create namespace argocd
      kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
    become: no

  - name: Change the argocd-server service type to LoadBalancer
    ansible.builtin.shell: |
      kubectl patch svc argocd-server -n argocd -p '{"spec": {"type": "LoadBalancer"}}'
    become: no

  - name: Copy cluster-issuer.yaml to main pi
    ansible.builtin.copy:
      src: /Users/jenn/Projects/HomeLab/kubernetes/argocd/cluster-issuer.yaml
      dest: /tmp/cluster-issuer.yaml

  - name: Apply cluster-issuer manifest
    command: kubectl apply -f /tmp/cluster-issuer.yaml

  - name: Copy ingress.yaml to main pi
    ansible.builtin.copy:
      src: /Users/jenn/Projects/HomeLab/kubernetes/argocd/ingress.yaml
      dest: /tmp/ingress.yaml
  
  - name: Apply ingress manifest
    command: kubectl apply -f /tmp/ingress.yaml