apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-server
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/part-of: argocd
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd-server
        app.kubernetes.io/part-of: argocd
    spec:
      serviceAccountName: k8s-wif-service-account
      volumes:
        - name: bound-service-account-token
          projected:
            defaultMode: 420
            sources:
              - serviceAccountToken:
                  audience: kubernetes.io
                  expirationSeconds: 3600
                  path: token
        - name: google-creds
          configMap:
            name: google-creds
            defaultMode: 420
            optional: false
      containers:
        - name: argocd-server
          image: argoproj/argocd:v2.6.15
          ports:
            - containerPort: 8080
              name: http
          volumeMounts:
            - name: bound-service-account-token
              mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              readOnly: true
            - name: google-creds
              mountPath: /var/run/secrets/google
              readOnly: true
          env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /var/run/secrets/google/credentials_config.json
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 5
